void * malloc(int size);
void free(void *ptr);

processus composé de segments mémoire :
- data non modifiables : les instructions => le programme
- data static : variables globales, variables statiques
- pile : appels et retours de fonction 
- //// : espace libre utilisé par la pile et par le tas 
- tas : malloc/free => sbrk() mais il n'y a pas d'inverse de sbrk() : le tas gonfle mais ne dégonfle pas


attention aux fuites mémoires : quand on alloue de la mémoire mais pour une certaine raison on perd le pointeur et on ne peut plus free cet espace mémoire